# Needed API Features for Frontend Integration

## Author Search/Autocomplete
- Endpoint: GET /authors/?search=QUERY
- Description: Returns a list of authors whose first name, last name, or affiliation contains the substring QUERY (case-insensitive).
- Purpose: Enables researcher autocomplete and search in the frontend SearchBar.
- Example:
  GET /authors/?search=chen
  Response: [ { author_id: ..., first_name: ..., last_name: ..., affiliation: ... }, ... ]

# Please implement this endpoint server-side to enable live researcher search in the frontend. 


# Coauthor Network for Profile Page (REQUIRED)
- Endpoint: GET /authors/{author_id}/coauthors
- Description: Returns a list of coauthors for the given author, with the number of joint papers for each.
- Response example:
  [
    { "author_id": 123, "name": "Jane Smith", "joint_papers": 5 },
    { "author_id": 456, "name": "Bob Lee", "joint_papers": 3 }
  ]
- Purpose: Enables the coauthor network visualization in the frontend Profile page.
- Notes:
  - Each coauthor should include at least: author_id, name (first + last), and joint_papers (int).
  - The endpoint should be efficient for authors with many coauthors. 

# Home Page Database Statistics (REQUIRED)
- Endpoint: GET /stats/overview
- Description: Returns total researchers, total papers, and total venues in the database.
- Response example:
  {
    "total_researchers": 2400000,
    "total_papers": 15700000,
    "total_venues": 450
  }
- Purpose: Enables dynamic display of database statistics on the home page. 